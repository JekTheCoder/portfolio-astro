---
import Icon from "./Icon.astro";

type Reference = { text: string; url: string };
type CC40 = { name: Reference; author: Reference; variant: string };

const data: Record<string, { name: string; class: string; cc40?: CC40 }> = {
	rust: {
		name: "Rust",
		class: "text-white border-white bg-white/10",
	},

	svelte: {
		name: "Svelte",
		class: "text-[#FF3E00] border-[#FF3E00] bg-[#FF3E00]/10",
	},

	astro: {
		name: "Astro",
		class: "text-[#BC52EE] border-[#BC52EE] bg-blue-[#BC52EE]/10",
	},

	tailwind: {
		name: "TailwindCSS",
		class: "text-[#06B6D4] border-[#06B6D4] bg-[#06B6D4]/10",
	},

	solid: {
		name: "SolidJS",
		class: "text-[#2C4F7C] border-[#2C4F7C] bg-[#2C4F7C]/10",
	},
	angular: {
		name: "Angular",
		class: "text-[#DD1B16] border-[#DD1B16] bg-[#DD1B16]/10",
		cc40: {
			name: {
				text: "Angular Logo",
				url: "https://simpleicons.org/icons/angular.svg",
			},
			author: {
				text: "Angular team",
				url: "https://angular.dev/",
			},
			variant: "with a solid red color",
		},
	},
	".net": {
		name: ".NET",
		class: "text-[#512BD4] border-[#512BD4] bg-[#512BD4]/10",
	},
	mssql: {
		name: "MSSQL",
		class: "text-[#00758F] border-[#00758F] bg-[#00758F]/10",
	},
};

interface Props {
	tech: string;
}

const { tech } = Astro.props;
const techData = (tech: string) => data[tech as keyof typeof data];
---

<span
	class={`group relative text-sm inline-flex items-center gap-1 border rounded-full pl-1 pr-2 ${techData(tech)?.class}`}
>
	<div class="w-3 h-3">
		<Icon name={tech} />
	</div>
	{techData(tech)?.name}

	{
		techData(tech)?.cc40 && (
			<span class="gap-x-1 absolute -top-10 left-0 group-hover:flex hidden w-max bg-gray-900 text-bold p-2 rounded-md">
				<a
					target="_blank"
					rel="noopener"
					class="link"
					href={techData(tech)?.cc40?.name.url}
				>
					{techData(tech)?.cc40?.name.text}
				</a>
				by
				<a
					target="_blank"
					rel="noopener"
					class="link"
					href={techData(tech)?.cc40?.author.url}
				>
					{techData(tech)?.cc40?.author.text}
				</a>
				{techData(tech)?.cc40?.variant}
			</span>
		)
	}
</span>

<style>
	a.link {
		@apply text-white;
		@apply bg-gradient-to-r from-cyan-500 to-blue-500;
		@apply bg-clip-text text-transparent;
	}
</style>
